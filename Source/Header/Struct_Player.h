//=============================================================================
//
// プレイヤーアニメーション構造体 [Struct_Prayer.h]
//
//=============================================================================

#pragma once

// アニメーションテーブル
struct AnimTable 
{
	int no;		// QuadUV テーブル番号	
	int cnt;		// 表示ループ数
};

//ＵＶ座標
struct QuadUV 
{
	float u[4];
	float v[4];
};


// UVテーブル (構造体QuadUV型の配列g_uvTable)
QuadUV  g_uvTable[17] = 
{
	//========================================================================================================
	//下向き
	//========================================================================================================
	//一枚目
	{ 0.0f,			1.0f / 4.0f,	0.0f,			1.0f / 4.0f ,				// U値
	0.0f,			0.0f,			1.0f / 4.0f,	1.0f / 4.0f },				// V値

																				//二枚目
	{ 1.0f / 4.0f,	2.0f / 4.0f,	1.0f / 4.0f,	2.0f / 4.0f ,
	0.0f,			0.0f,			1.0f / 4.0f,	1.0f / 4.0f },

	//三枚目
	{ 2.0f / 4.0f,	3.0f / 4.0f,	2.0f / 4.0f,	3.0f / 4.0f ,
	0.0f,			0.0f,			1.0f / 4.0f,	1.0f / 4.0f },

	//四枚目
	{ 3.0f / 4.0f,	4.0f / 4.0f,	3.0f / 4.0f,	4.0f / 4.0f ,
	0.0f,			0.0f,			1.0f / 4.0f,	1.0f / 4.0f },

	//========================================================================================================
	//上向き
	//========================================================================================================
	//五枚目
	{ 0.0f,    	   1.0f / 4.0f,	   0.0f,	        1.0f / 4.0f ,
	1.0f / 4.0f,	   1.0f / 4.0f,	   2.0f / 4.0f,	    2.0f / 4.0f },

	//六枚目
	{ 1.0f / 4.0f,	2.0f / 4.0f,	1.0f / 4.0f,	    2.0f / 4.0f ,
	1.0f / 4.0f,	1.0f / 4.0f,	2.0f / 4.0f,	2.0f / 4.0f },

	//七枚目
	{ 2.0f / 4.0f,	3.0f / 4.0f,	2.0f / 4.0f,	3.0f / 4.0f ,
	1.0f / 4.0f,	1.0f / 4.0f,	2.0f / 4.0f,	2.0f / 4.0f },

	//八枚目
	{ 3.0f / 4.0f,	4.0f / 4.0f,	3.0f / 4.0f,	4.0f / 4.0f ,
	1.0f / 4.0f,	1.0f / 4.0f,	2.0f / 4.0f,	2.0f / 4.0f },

	//========================================================================================================
	//左向き
	//========================================================================================================
	//九枚目
	{ 0.0f,	        1.0f / 4.0f,	0.0f,	        1.0f / 4.0f ,
	2.0f / 4.0f,	    2.0f / 4.0f,	3.0f / 4.0f,	3.0f / 4.0f },

	//十枚目
	{ 1.0f / 4.0f,	2.0f / 4.0f,	1.0f / 4.0f,	2.0f / 4.0f ,
	2.0f / 4.0f,  2.0f / 4.0f,	3.0f / 4.0f,	3.0f / 4.0f },

	//十一枚目
	{ 2.0f / 4.0f,	3.0f / 4.0f,	2.0f / 4.0f,	3.0f / 4.0f ,
	2.0f / 4.0f,  2.0f / 4.0f,	3.0f / 4.0f,	3.0f / 4.0f },

	//十二枚目
	{ 3.0f / 4.0f,	4.0f / 4.0f,	3.0f / 4.0f,	4.0f / 4.0f ,
	2.0f / 4.0f,	2.0f / 4.0f,	3.0f / 4.0f,	3.0f / 4.0f },

	//========================================================================================================
	//右向き
	//========================================================================================================
	//十三枚目
	{ 0.0f,	        1.0f / 4.0f,	0.0f,	        1.0f / 4.0f ,
	3.0f / 4.0f,	    3.0f / 4.0f,	4.0f / 4.0f,	4.0f / 4.0f },

	//十四目
	{ 1.0f / 4.0f,	2.0f / 4.0f,	1.0f / 4.0f,	2.0f / 4.0f ,
	3.0f / 4.0f,      3.0f / 4.0f,	4.0f / 4.0f,	4.0f / 4.0f },

	//十五枚目
	{ 2.0f / 4.0f,	3.0f / 4.0f,	2.0f / 4.0f,	3.0f / 4.0f ,
	3.0f / 4.0f,      3.0f / 4.0f,	4.0f / 4.0f,	4.0f / 4.0f },

	//十六枚目(16と17は同じ)
	{ 3.0f / 4.0f,	4.0f / 4.0f,	3.0f / 4.0f,	4.0f / 4.0f ,
	3.0f / 4.0f,	    3.0f / 4.0f,	4.0f / 4.0f,	4.0f / 4.0f },
	//十三枚目
	{ 0.0f,	        1.0f / 4.0f,	0.0f,	        1.0f / 4.0f ,
	3.0f / 4.0f,	    3.0f / 4.0f,	4.0f / 4.0f,	4.0f / 4.0f }
};


// アニメーションテーブル
AnimTable g_anim[] = 
{
	{ 0,10 },   //一枚目
	{ 1,10 },   //二枚目
	{ 2,10 },   //三枚目
	{ 3,10 },   //四枚目
	{ 4,10 },   //五枚目
	{ 5,10 },   //六枚目
	{ 6,10 },   //七枚目
	{ 7,10 },   //八枚目
	{ 8,10 },   //九枚目
	{ 9,10 },   //十枚目
	{ 10,10 },  //十一枚目
	{ 11,10 },  //十二枚目
	{ 12,10 },  //十三枚目
	{ 13,10 },  //十四枚目
	{ 14,10 },  //十五枚目
	{ 15,10 },  //十六枚目
	{ 16,10 },  //十六枚目
	{ -1,-1 }
};